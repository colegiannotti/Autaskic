// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20231114203717_First")]
    partial class First
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("WebApplication1.Models.Step", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TaskBaseId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TaskBaseId");

                    b.ToTable("Steps");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Energy")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Enjoyment")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastCompletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<TimeOnly>("TimeOfDay")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("TimeSpan")
                        .HasColumnType("TEXT");

                    b.Property<int>("Tolerance")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Example Description",
                            Energy = 5,
                            Enjoyment = 5,
                            LastCompletedDate = new DateTime(2023, 11, 14, 15, 37, 17, 560, DateTimeKind.Local).AddTicks(1409),
                            Name = "Example Task",
                            Priority = 1,
                            TimeOfDay = new TimeOnly(8, 0, 0),
                            TimeSpan = new TimeSpan(0, 0, 30, 0, 0),
                            Tolerance = 5
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Step", b =>
                {
                    b.HasOne("WebApplication1.Models.TaskBase", null)
                        .WithMany("Steps")
                        .HasForeignKey("TaskBaseId");
                });

            modelBuilder.Entity("WebApplication1.Models.TaskBase", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
